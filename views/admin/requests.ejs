<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Request Management - Admin Panel</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        .sidebar {
            min-height: 100vh;
            background-color: #343a40;
            color: white;
        }

        .nav-link {
            color: rgba(255, 255, 255, .8);
        }

        .nav-link:hover {
            color: white;
        }

        /* Custom Status Badges - Not using Bootstrap */
        .status-badge {
            display: inline-block;
            padding: 0.35em 0.65em;
            font-size: 0.75rem;
            font-weight: 600;
            line-height: 1;
            text-align: center;
            white-space: nowrap;
            vertical-align: baseline;
            border-radius: 0.375rem;
            text-transform: uppercase;
        }

        .status-pending {
            background-color: #fd7e14;
            color: #ffffff;
        }

        .status-approved {
            background-color: #28a745;
            color: #ffffff;
        }

        .status-rejected {
            background-color: #6c757d;
            color: #ffffff;
        }

        /* Custom Priority Badges */
        .priority-badge {
            display: inline-block;
            padding: 0.35em 0.65em;
            font-size: 0.75rem;
            font-weight: 600;
            line-height: 1;
            text-align: center;
            white-space: nowrap;
            vertical-align: baseline;
            border-radius: 0.375rem;
            text-transform: uppercase;
        }

        .priority-high {
            background-color: #dc3545;
            color: #ffffff;
            animation: pulse 2s ease-in-out infinite;
        }

        .priority-medium {
            background-color: #ffc107;
            color: #000000;
        }

        .priority-low {
            background-color: #17a2b8;
            color: #ffffff;
        }

        @keyframes pulse {
            0%, 100% {
                opacity: 1;
            }
            50% {
                opacity: 0.7;
            }
        }

        .message-cell {
            max-width: 300px;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .message-full {
            white-space: normal;
        }

        .table thead th {
            background-color: #f8f9fa;
            font-weight: 600;
            border-bottom: 2px solid #dee2e6;
            position: sticky;
            top: 0;
            z-index: 10;
        }

        .table tbody tr {
            transition: all 0.2s ease;
        }

        .table tbody tr:hover {
            background-color: #f8f9fa;
            transform: scale(1.01);
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .table td {
            vertical-align: middle;
            padding: 1rem 0.75rem;
        }

        code {
            background-color: #e9ecef;
            padding: 0.25rem 0.5rem;
            border-radius: 0.25rem;
            font-size: 0.875rem;
            color: #495057;
        }

        .btn-group-sm .btn {
            transition: all 0.2s ease;
        }

        .btn-group-sm .btn:hover {
            transform: translateY(-2px);
        }

        .card {
            border: none;
            box-shadow: 0 0.125rem 0.25rem rgba(0,0,0,0.075);
            border-radius: 0.5rem;
        }

        .card-body {
            padding: 1.5rem;
        }

        .table-responsive {
            border-radius: 0.5rem;
        }
    </style>
</head>

<body>
    <div class="container-fluid">
        <div class="row">
            <!-- Sidebar -->
            <div class="col-md-3 col-lg-2 px-0 sidebar">
                <div class="p-3">
                    <h4>Admin Panel</h4>
                    <hr>
                    <ul class="nav flex-column">
                        <li class="nav-item">
                            <a class="nav-link" href="/-nsstn123-admin/dashboard">
                                <i class="fas fa-tachometer-alt me-2"></i>Dashboard
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/-nsstn123-admin/payments">
                                <i class="fas fa-dollar-sign me-2"></i>Payment
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/-nsstn123-admin/users">
                                <i class="fas fa-users me-2"></i>Users
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/-nsstn123-admin/courses">
                                <i class="fas fa-book me-2"></i>Courses
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link active" href="/-nsstn123-admin/requests">
                                <i class="fas fa-envelope me-2"></i>Requests
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/-nsstn123-admin/content">
                                <i class="fas fa-file-alt me-2"></i>Content
                            </a>
                        </li>
                        <li class="nav-item mt-4">
                            <a class="nav-link text-danger" href="/-nsstn123-admin/logout">
                                <i class="fas fa-sign-out-alt me-2"></i>Logout
                            </a>
                        </li>
                    </ul>
                </div>
            </div>

            <!-- Main Content -->
            <div class="col-md-9 col-lg-10 p-4">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h2>Request Management</h2>
                    <button id="refreshBtn" class="btn btn-outline-secondary">
                        <i class="fas fa-sync-alt me-2"></i>Refresh
                    </button>
                </div>

                <!-- Search and Filter -->
                <div class="card mb-4">
                    <div class="card-body">
                        <div class="row g-2">
                            <div class="col-md-4">
                                <input type="text" id="searchInput" class="form-control"
                                    placeholder="Search by message ...">
                            </div>
                            <div class="col-md-2">
                                <select id="statusFilter" class="form-select">
                                    <option value="">All Status</option>
                                    <option value="pending">Pending</option>
                                    <option value="approved">Approved</option>
                                    <option value="rejected">Rejected</option>
                                </select>
                            </div>
                            <div class="col-md-2">
                                <select id="priorityFilter" class="form-select">
                                    <option value="">All Priority</option>
                                    <option value="high">High</option>
                                    <option value="medium">Medium</option>
                                    <option value="low">Low</option>
                                </select>
                            </div>
                            <div class="col-md-2">
                                <select id="courseFilter" class="form-select">
                                    <option value="">All Courses</option>
                                </select>
                            </div>
                            <div class="col-md-2">
                                <button id="clearFilters" class="btn btn-outline-secondary w-100">
                                    <i class="fas fa-times me-1"></i>Clear
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Statistics Cards -->
                <div class="row mb-4">
                    <div class="col-md-3">
                        <div class="card text-white bg-primary">
                            <div class="card-body">
                                <h5 class="card-title">Total Requests</h5>
                                <h2 id="totalCount">0</h2>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card text-white bg-warning">
                            <div class="card-body">
                                <h5 class="card-title">Pending</h5>
                                <h2 id="pendingCount">0</h2>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card text-white bg-success">
                            <div class="card-body">
                                <h5 class="card-title">Approved</h5>
                                <h2 id="approvedCount">0</h2>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card text-white bg-danger">
                            <div class="card-body">
                                <h5 class="card-title">Rejected</h5>
                                <h2 id="rejectedCount">0</h2>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Requests Table -->
                <div class="card">
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        
                                        
                                        <th>Instructor</th>
                                        <th>Course</th>
                                        <th>Message</th>
                                        <th>Priority</th>
                                        <th>Status</th>
                                        <th>Date</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody id="requestsTableBody">
                                    <% if (requests && requests.length > 0) { %>
                                        <% requests.forEach(request => { %>
                                            <tr data-id="<%= request._id %>" class="request-row">
                                              
                                                <td>
                                                    <%= request.instructor_id?.name || 'N/A' %>
                                                </td>
                                                <td>
                                                    <%= request.course_id?.title || 'N/A' %>
                                                </td>
                                                <td class="message-cell" title="<%= request.message %>">
                                                    <%= request.message %>
                                                </td>
                                                <td>
                                                    <span class="priority-badge priority-<%= request.priority %>">
                                                        <%= request.priority.toUpperCase() %>
                                                    </span>
                                                </td>
                                                <td>
                                                    <span class="status-badge status-<%= request.status %>">
                                                        <%= request.status.toUpperCase() %>
                                                    </span>
                                                </td>
                                                <td>
                                                    <%= new Date(request.created_at).toLocaleDateString() %>
                                                </td>
                                                <td>
                                                    <div class="btn-group btn-group-sm">
                                                        <button class="btn btn-info view-btn" title="View Details">
                                                            <i class="fas fa-eye"></i>
                                                        </button>
                                                        <button class="btn btn-success approve-btn" title="Approve">
                                                            <i class="fas fa-check"></i>
                                                        </button>
                                                        <button class="btn btn-warning reject-btn" title="Reject">
                                                            <i class="fas fa-times"></i>
                                                        </button>
                                                        <button class="btn btn-danger delete-btn" title="Delete">
                                                            <i class="fas fa-trash"></i>
                                                        </button>
                                                    </div>
                                                </td>
                                            </tr>
                                        <% }); %>
                                    <% } else { %>
                                        <tr id="noRequestsRow">
                                            <td colspan="8" class="text-center">No requests found</td>
                                        </tr>
                                    <% } %>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- View Request Modal -->
    <div class="modal fade" id="viewRequestModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Request Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-6">
                           
                            <p><strong>Instructor:</strong> <span id="viewInstructor"></span></p>
                            <p><strong>Course:</strong> <span id="viewCourse"></span></p>
                        </div>
                        <div class="col-md-6">
                            <p><strong>Priority:</strong> <span id="viewPriority"></span></p>
                            <p><strong>Status:</strong> <span id="viewStatus"></span></p>
                            <p><strong>Created:</strong> <span id="viewDate"></span></p>
                        </div>
                    </div>
                    <hr>
                    <div>
                        <strong>Message:</strong>
                        <p class="mt-2 p-3 bg-light rounded" id="viewMessage"></p>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-md-6">
                            <label class="form-label"><strong>Update Priority:</strong></label>
                            <select id="updatePriority" class="form-select">
                                <option value="high">High</option>
                                <option value="medium">Medium</option>
                                <option value="low">Low</option>
                            </select>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label"><strong>Update Status:</strong></label>
                            <select id="updateStatus" class="form-select">
                                <option value="pending">Pending</option>
                                <option value="approved">Approved</option>
                                <option value="rejected">Rejected</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="updateRequestBtn">Save Changes</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            let currentRequestId = null;

            // Function to populate filters
            function populateFiltersFromTable() {
                const requestRows = document.querySelectorAll('.request-row');
                const uniqueCourses = new Set();

                requestRows.forEach(row => {
                    const course = row.cells[2].textContent.trim();
                    if (course && course !== 'N/A') uniqueCourses.add(course);
                });

                const courseFilter = document.getElementById('courseFilter');
                if (courseFilter) {
                    const currentValue = courseFilter.value;
                    while (courseFilter.options.length > 1) {
                        courseFilter.remove(1);
                    }

                    Array.from(uniqueCourses).sort().forEach(course => {
                        const option = document.createElement('option');
                        option.value = course;
                        option.textContent = course;
                        courseFilter.appendChild(option);
                    });

                    if (currentValue && Array.from(uniqueCourses).includes(currentValue)) {
                        courseFilter.value = currentValue;
                    }
                }
            }

            // Function to update statistics
            function updateStatistics() {
               const rows = document.querySelectorAll('.request-row');
              let total = 0, pending = 0, approved = 0, rejected = 0;

              rows.forEach(row => {
                    if (row.style.display !== 'none') {
                      total++;
                       const statusBadge = row.cells[4].querySelector('.status-badge');
                       if (statusBadge) {
                          if (statusBadge.classList.contains('status-pending')) pending++;
                            else if (statusBadge.classList.contains('status-approved')) approved++;
                         else if (statusBadge.classList.contains('status-rejected')) rejected++;
                  }
        }
    });

    document.getElementById('totalCount').textContent = total;
    document.getElementById('pendingCount').textContent = pending;
    document.getElementById('approvedCount').textContent = approved;
    document.getElementById('rejectedCount').textContent = rejected;
}

            // Function to refresh table
            async function refreshRequestsTable() {
                try {
                    const response = await fetch('/-nsstn123-admin/requests/data');
                    const requests = await response.json();
                    const tbody = document.getElementById('requestsTableBody');
                    tbody.innerHTML = '';

                    if (requests.length === 0) {
                        tbody.innerHTML = `<tr id="noRequestsRow"><td colspan="8" class="text-center">No requests found</td></tr>`;
                        updateStatistics();
                        return;
                    }

                    requests.forEach(request => {
                        const row = document.createElement('tr');
                        row.classList.add('request-row');
                        row.setAttribute('data-id', request._id);
                        row.innerHTML = `
                           
                            <td>${request.instructor_id?.name || 'N/A'}</td>
                            <td>${request.course_id?.title || 'N/A'}</td>
                            <td class="message-cell" title="${request.message}">${request.message}</td>
                            <td><span class="priority-badge priority-${request.priority}">${request.priority.toUpperCase()}</span></td>
                            <td><span class="status-badge status-${request.status}">${request.status.toUpperCase()}</span></td>
                            <td>${new Date(request.created_at).toLocaleDateString()}</td>
                            <td>
                                <div class="btn-group btn-group-sm">
                                    <button class="btn btn-info view-btn" title="View Details">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                    <button class="btn btn-success approve-btn" title="Approve">
                                        <i class="fas fa-check"></i>
                                    </button>
                                    <button class="btn btn-warning reject-btn" title="Reject">
                                        <i class="fas fa-times"></i>
                                    </button>
                                    <button class="btn btn-danger delete-btn" title="Delete">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </div>
                            </td>`;
                        tbody.appendChild(row);
                    });

                    populateFiltersFromTable();
                    updateStatistics();
                } catch (err) {
                    console.error('Error refreshing requests:', err);
                }
            }

            // Initialize
            populateFiltersFromTable();
            updateStatistics();

            // Refresh button
            const refreshBtn = document.getElementById('refreshBtn');
            if (refreshBtn) {
                refreshBtn.addEventListener('click', refreshRequestsTable);
            }

            // Auto refresh every 15 seconds
            setInterval(refreshRequestsTable, 15000);

            // Filter functionality
            const searchInput = document.getElementById('searchInput');
            const statusFilter = document.getElementById('statusFilter');
            const priorityFilter = document.getElementById('priorityFilter');
            const courseFilter = document.getElementById('courseFilter');
            const clearFiltersBtn = document.getElementById('clearFilters');

            function filterTable() {
                const searchTerm = searchInput.value.toLowerCase().trim();
                const selectedStatus = statusFilter.value.toLowerCase();
                const selectedPriority = priorityFilter.value.toLowerCase();
                const selectedCourse = courseFilter.value;

                const requestRows = document.querySelectorAll('.request-row');
                let visibleCount = 0;

                requestRows.forEach(row => {
                 
                    const instructor = row.cells[0].textContent.toLowerCase();
                    const course = row.cells[1].textContent.toLowerCase();
                    const message = row.cells[2].textContent.toLowerCase();
                    const priority = row.cells[3].textContent.toLowerCase();
                    const status = row.cells[4].textContent.toLowerCase();

                    const matchesSearch = !searchTerm || message.includes(searchTerm);
                    const matchesStatus = !selectedStatus || status.includes(selectedStatus);
                    const matchesPriority = !selectedPriority || priority.includes(selectedPriority);
                    const matchesCourse = !selectedCourse || course === selectedCourse;

                    if (matchesSearch && matchesStatus && matchesPriority && matchesCourse) {
                        row.style.display = '';
                        visibleCount++;
                    } else {
                        row.style.display = 'none';
                    }
                });

                const noRequestsRow = document.getElementById('noRequestsRow');
                if (noRequestsRow) {
                    noRequestsRow.style.display = visibleCount === 0 ? '' : 'none';
                }
            }

            function clearFilters() {
                searchInput.value = '';
                statusFilter.value = '';
                priorityFilter.value = '';
                courseFilter.value = '';
                filterTable();
            }

            if (searchInput) searchInput.addEventListener('input', filterTable);
            if (statusFilter) statusFilter.addEventListener('change', filterTable);
            if (priorityFilter) priorityFilter.addEventListener('change', filterTable);
            if (courseFilter) courseFilter.addEventListener('change', filterTable);
            if (clearFiltersBtn) clearFiltersBtn.addEventListener('click', clearFilters);

            // View request details
            document.addEventListener('click', function (e) {
                if (e.target.closest('.view-btn')) {
                    const button = e.target.closest('.view-btn');
                    const row = button.closest('tr');
                    currentRequestId = row.getAttribute('data-id');

                    
                    document.getElementById('viewInstructor').textContent = row.cells[1].textContent.trim();
                    document.getElementById('viewCourse').textContent = row.cells[2].textContent.trim();
                    document.getElementById('viewMessage').textContent = row.cells[3].getAttribute('title');
                    
                    // Get priority and status from the badge elements
                    const priorityBadge = row.cells[4].querySelector('.priority-badge');
                    const statusBadge = row.cells[5].querySelector('.status-badge');
                    
                    let priority = 'medium';
                    let status = 'pending';
                    
                    if (priorityBadge) {
                        if (priorityBadge.classList.contains('priority-high')) priority = 'high';
                        else if (priorityBadge.classList.contains('priority-medium')) priority = 'medium';
                        else if (priorityBadge.classList.contains('priority-low')) priority = 'low';
                    }
                    
                    if (statusBadge) {
                        if (statusBadge.classList.contains('status-pending')) status = 'pending';
                        else if (statusBadge.classList.contains('status-approved')) status = 'approved';
                        else if (statusBadge.classList.contains('status-rejected')) status = 'rejected';
                    }
                    
                    document.getElementById('viewPriority').innerHTML = `<span class="priority-badge priority-${priority}">${priority.toUpperCase()}</span>`;
                    document.getElementById('viewStatus').innerHTML = `<span class="status-badge status-${status}">${status.toUpperCase()}</span>`;
                    document.getElementById('viewDate').textContent = row.cells[6].textContent.trim();
                    
                    document.getElementById('updatePriority').value = priority;
                    document.getElementById('updateStatus').value = status;

                    const modal = new bootstrap.Modal(document.getElementById('viewRequestModal'));
                    modal.show();
                }
            });

            // Update request
            const updateRequestBtn = document.getElementById('updateRequestBtn');
            if (updateRequestBtn) {
                updateRequestBtn.addEventListener('click', async function () {
                    const priority = document.getElementById('updatePriority').value;
                    const status = document.getElementById('updateStatus').value;

                    try {
                        const response = await fetch(`/-nsstn123-admin/requests/${currentRequestId}`, {
                            method: 'PUT',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ priority, status })
                        });

                        const result = await response.json();
                        if (result.success) {
                            window.location.reload();
                        } else {
                            alert('Error updating request');
                        }
                    } catch (error) {
                        console.error('Error:', error);
                        alert('Error updating request');
                    }
                });
            }

            // Quick approve
            document.addEventListener('click', async function (e) {
                if (e.target.closest('.approve-btn')) {
                    const button = e.target.closest('.approve-btn');
                    const row = button.closest('tr');
                    const requestId = row.getAttribute('data-id');

                    try {
                        const response = await fetch(`/-nsstn123-admin/requests/${requestId}`, {
                            method: 'PUT',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ status: 'approved' })
                        });

                        const result = await response.json();
                        if (result.success) {
                            await refreshRequestsTable();
                        }
                    } catch (error) {
                        console.error('Error:', error);
                    }
                }
            });

            // Quick reject
            document.addEventListener('click', async function (e) {
                if (e.target.closest('.reject-btn')) {
                    const button = e.target.closest('.reject-btn');
                    const row = button.closest('tr');
                    const requestId = row.getAttribute('data-id');

                    try {
                        const response = await fetch(`/-nsstn123-admin/requests/${requestId}`, {
                            method: 'PUT',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ status: 'rejected' })
                        });

                        const result = await response.json();
                        if (result.success) {
                            await refreshRequestsTable();
                        }
                    } catch (error) {
                        console.error('Error:', error);
                    }
                }
            });

            // Delete request
            document.addEventListener('click', async function (e) {
                if (e.target.closest('.delete-btn')) {
                    const button = e.target.closest('.delete-btn');
                    const row = button.closest('tr');
                    const requestId = row.getAttribute('data-id');

                    if (confirm('Are you sure you want to delete this request?')) {
                        try {
                            const response = await fetch(`/-nsstn123-admin/requests/${requestId}`, {
                                method: 'DELETE',
                                headers: { 'Content-Type': 'application/json' }
                            });

                            const result = await response.json();
                            if (result.success) {
                                await refreshRequestsTable();
                            } else {
                                alert('Error deleting request');
                            }
                        } catch (error) {
                            console.error('Error:', error);
                            alert('Error deleting request');
                        }
                    }
                }
            });
        });
    </script>
</body>

</html>