<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Course Management - Admin Panel</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        .sidebar {
            min-height: 100vh;
            background-color: #343a40;
            color: white;
        }
        .nav-link {
            color: rgba(255,255,255,.8);
        }
        .nav-link:hover {
            color: white;
        }
    </style>
</head>
<body>
    <div class="container-fluid">
        <div class="row">
            <!-- Sidebar -->
            <div class="col-md-3 col-lg-2 px-0 sidebar">
                <div class="p-3">
                    <h4>Admin Panel</h4>
                    <hr>
                    <ul class="nav flex-column">
                        <li class="nav-item">
                            <a class="nav-link" href="/admin/dashboard">
                                <i class="fas fa-tachometer-alt me-2"></i>Dashboard
                            </a>
                        </li>
                           <li class="nav-item">
                            <a class="nav-link active" href="/admin/payments">
                                <i class="fas fa-tachometer-alt me-2"></i>payment
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/admin/users">
                                <i class="fas fa-users me-2"></i>Users
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link active" href="/admin/courses">
                                <i class="fas fa-book me-2"></i>Courses
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/admin/content">
                                <i class="fas fa-file-alt me-2"></i>Content
                            </a>
                        </li>
                        <li class="nav-item mt-4">
                            <a class="nav-link text-danger" href="/admin/logout">
                                <i class="fas fa-sign-out-alt me-2"></i>Logout
                            </a>
                        </li>
                    </ul>
                </div>
            </div>

            <!-- Main Content -->
            <div class="col-md-9 col-lg-10 p-4">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h2>Course Management</h2>
                    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addCourseModal">
                        <i class="fas fa-plus me-2"></i>Add New Course
                    </button>
                </div>

                <!-- Search and Filter -->
                <div class="card mb-4">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <input type="text" class="form-control" placeholder="Search courses...">
                            </div>
                            <div class="col-md-3">
                                <select class="form-select">
                                    <option value="">All Subjects</option>
                                    <option value="Computer Science">Computer Science</option>
                                    <option value="Data Science">Data Science</option>
                                    <option value="Marketing">Marketing</option>
                                </select>
                            </div>
                            <div class="col-md-3">
                                <select class="form-select">
                                    <option value="">All Instructors</option>
                                    <!-- Will be populated dynamically -->
                                </select>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Courses Table -->
                <div class="card">
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Title</th>
                                        <th>Subject</th>
                                        <th>Instructor</th>
                                        <th>Enrolled</th>
                                        <th>Rating</th>
                                        <th>Price</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% if (courses && courses.length > 0) { %>
                                        <% courses.forEach(course => { %>
                                            <tr data-id="<%= course._id %>">
                                                <td><%= course.title %></td>
                                                <td><%= course.subject %></td>
                                                <td><%= course.instructor_name %></td>
                                                <td><%= course.enrolled_count %></td>
                                                <td>
                                                    <div class="d-flex align-items-center">
                                                        <i class="fas fa-star text-warning me-1"></i>
                                                        <%= course.avg_rating.toFixed(1) %>
                                                    </div>
                                                </td>
                                                <td>$<%= course.price.toFixed(2) %></td>
                                                <td>
                                                    <button class="btn btn-sm btn-info me-2">
                                                        <i class="fas fa-edit"></i>
                                                    </button>
                                                    <button class="btn btn-sm btn-danger">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                </td>
                                            </tr>
                                        <% }); %>
                                    <% } else { %>
                                        <tr>
                                            <td colspan="7" class="text-center">No courses found</td>
                                        </tr>
                                    <% } %>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Add Course Modal -->
    <div class="modal fade" id="addCourseModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add New Course</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form action="/admin/courses" method="POST">
                        <div class="mb-3">
                            <label class="form-label">Title</label>
                            <input type="text" name="title" class="form-control" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Subject</label>
                            <select name="subject" class="form-select" required>
                                <option value="Computer Science">Computer Science</option>
                                <option value="Data Science">Data Science</option>
                                <option value="Marketing">Marketing</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Instructor</label>
                            <select name="instructor_id" class="form-select" required>
                                <!-- Will be populated dynamically -->
                            </select>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Price ($)</label>
                            <input type="number" name="price" class="form-control" step="0.01" min="0" required>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-primary">Add Course</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Course Modal -->
    <div class="modal fade" id="editCourseModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Edit Course</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="editCourseForm">
                        <div class="mb-3">
                            <label class="form-label">Title</label>
                            <input type="text" name="title" class="form-control" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Subject</label>
                            <select name="subject" class="form-select" required>
                                <option value="Computer Science">Computer Science</option>
                                <option value="Data Science">Data Science</option>
                                <option value="Marketing">Marketing</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Instructor</label>
                            <select name="instructor_id" class="form-select" required>
                                <!-- Will be populated dynamically -->
                            </select>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Price ($)</label>
                            <input type="number" name="price" class="form-control" step="0.01" min="0" required>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-primary">Save Changes</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Function to populate instructor dropdowns
            async function populateInstructors() {
                try {
                    const response = await fetch('/admin/instructors');
                    const instructors = await response.json();
                    
                    const instructorSelects = document.querySelectorAll('select[name="instructor_id"]');
                    instructorSelects.forEach(select => {
                        // Clear existing options except the first one
                        while (select.options.length > 1) {
                            select.remove(1);
                        }
                        
                        // Add instructor options
                        instructors.forEach(instructor => {
                            const option = document.createElement('option');
                            option.value = instructor._id;
                            option.textContent = instructor.name;
                            select.appendChild(option);
                        });
                    });
                } catch (error) {
                    console.error('Error fetching instructors:', error);
                }
            }

            // Populate instructors when page loads
            populateInstructors();

            // Populate instructors when add modal opens
            const addCourseModal = document.getElementById('addCourseModal');
            if (addCourseModal) {
                addCourseModal.addEventListener('show.bs.modal', populateInstructors);
            }

            // Populate instructors when edit modal opens
            const editCourseModal = document.getElementById('editCourseModal');
            if (editCourseModal) {
                editCourseModal.addEventListener('show.bs.modal', populateInstructors);
            }

            const searchInput = document.querySelector('input[placeholder="Search courses..."]');
            const subjectFilter = document.querySelector('select:nth-of-type(1)');
            const instructorFilter = document.querySelector('select:nth-of-type(2)');
            const tableRows = document.querySelectorAll('tbody tr');

            function filterTable() {
                const searchTerm = searchInput.value.toLowerCase();
                const selectedSubject = subjectFilter.value.toLowerCase();
                const selectedInstructor = instructorFilter.value.toLowerCase();

                tableRows.forEach(row => {
                    const title = row.cells[0].textContent.toLowerCase();
                    const subject = row.cells[1].textContent.toLowerCase();
                    const instructor = row.cells[2].textContent.toLowerCase();
                    
                    const matchesSearch = title.includes(searchTerm);
                    const matchesSubject = !selectedSubject || subject === selectedSubject;
                    const matchesInstructor = !selectedInstructor || instructor.includes(selectedInstructor);

                    row.style.display = matchesSearch && matchesSubject && matchesInstructor ? '' : 'none';
                });
            }

            if (searchInput) searchInput.addEventListener('input', filterTable);
            if (subjectFilter) subjectFilter.addEventListener('change', filterTable);
            if (instructorFilter) instructorFilter.addEventListener('change', filterTable);

            // Delete course
            const deleteButtons = document.querySelectorAll('.btn-danger');
            deleteButtons.forEach(button => {
                button.addEventListener('click', async function() {
                    const row = this.closest('tr');
                    const courseId = row.getAttribute('data-id');

                    if (confirm('Are you sure you want to delete this course? This will also delete all associated content.')) {
                        try {
                            const response = await fetch(`/admin/courses/${courseId}`, {
                                method: 'DELETE',
                                headers: {
                                    'Content-Type': 'application/json'
                                }
                            });
                            const data = await response.json();
                            
                            if (data.success) {
                                row.remove();
                            } else {
                                alert('Error deleting course');
                            }
                        } catch (error) {
                            console.error('Error:', error);
                            alert('Error deleting course');
                        }
                    }
                });
            });

            // Edit course
            const editButtons = document.querySelectorAll('.btn-info');
            editButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const row = this.closest('tr');
                    const courseId = row.getAttribute('data-id');
                    const title = row.cells[0].textContent;
                    const subject = row.cells[1].textContent;
                    const price = row.cells[5].textContent.replace('$', '');

                    // Populate edit modal
                    const editModal = new bootstrap.Modal(document.getElementById('editCourseModal'));
                    const form = document.getElementById('editCourseForm');
                    
                    if (form) {
                        // Set form data
                        form.setAttribute('data-id', courseId);
                        form.querySelector('[name="title"]').value = title;
                        form.querySelector('[name="subject"]').value = subject;
                        form.querySelector('[name="price"]').value = price;

                        // Show modal
                        editModal.show();
                    }
                });
            });

            // Handle edit form submission
            const editForm = document.getElementById('editCourseForm');
            if (editForm) {
                editForm.addEventListener('submit', async function(e) {
                    e.preventDefault();
                    const courseId = this.getAttribute('data-id');
                    const formData = new FormData(this);
                    const data = Object.fromEntries(formData.entries());

                    try {
                        const response = await fetch(`/admin/courses/${courseId}`, {
                            method: 'PUT',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(data)
                        });
                        const result = await response.json();
                        
                        if (result.success) {
                            window.location.reload();
                        } else {
                            alert('Error updating course');
                        }
                    } catch (error) {
                        console.error('Error:', error);
                        alert('Error updating course');
                    }
                });
            }
        });
    </script>
</body>
</html>
